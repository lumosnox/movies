<?xml version="1.0" encoding="utf-8"?>
<flow name="MoviesFlow" package="iristk.app.movies" 
	initial="Initialise" xmlns:this="iristk.app.movies.MoviesFlow" xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param" xmlns:agent="iristk.situated.SystemAgentFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SystemAgentFlow SystemAgentFlow.xsd">
	
	
	<import class="java.util.ArrayList"/>
	<import class="iristk.situated.Body"/>
	<import class="iristk.app.movies.Utils"/>
	<import class="iristk.app.movies.SpecificMessage"/>
	<import class="iristk.app.movies.Logger"/>
	<import class="iristk.app.movies.Recommender"/>
	<import class="java.util.HashMap"/>
	
	<param name="agent" type="iristk.situated.SystemAgentFlow"/>
	
	<var name="system" type="iristk.situated.SystemAgent" value="agent.getSystemAgent()"/> 
	 
	<var name="currentUsers" type="ArrayList&lt;Integer&gt;"/> <!-- an array that holds the user (as user ids) that can currently interact with the system (main user+ group - if a group exists)-->
	
	<var name="group" type="ArrayList&lt;Integer&gt;"/> <!-- if main user is in a group, then use this array to hold the rest of the group members -->
	
	<var name="stateName" type="String"/> <!-- keep name of state  -->
	<var name="stateId" type="Integer"/> <!-- keep id of state -->
	
	<var name="silenceTimeout" type="Integer"/>
	
	<var name="n" type="Integer"/> <!-- how many users to interact with - without the current one -->
	
	<var name="recommendation" type="String []"/>
	<var name="sayAcceptGroupEntryMessage" type="boolean"/> 
	<var name="sayStep2EntryMessage" type="boolean"/>
	<var name="sayStep4EntryMessage" type="boolean"/> <!-- reentry flag-->
	<var name="isMovie" type="boolean"/>
	<var name="genre" type="String"/>
	<var name="rating" type="String"/>
	<var name="recommendationNumber" type="Integer"/> <!-- Set to zero, if a user wants to hear another recommendation, increment. -->
	<var name="entryMessage" type="boolean []"/>
	<var name="userBodies" type="HashMap &lt;String,String&gt;"/> <!-- a map of user/body pairs  -->
	<var name="checkUser" type="String"/> <!-- hold the user that is to interact with the system -->
	<var name="distance" type="Double"/> <!-- the distance between the user and agent; if user is far away do not take him into account -->
	<var name="wasInterrupted" type="boolean"/>
	<var name="currentUser" type="String"/>
	<var name="logger" type="Logger"/>
	
	
	<!-- In this state, initialise all variables to prepare for new session. -->
	<state id="Initialise" extends="Dialog">
		<onentry>
			<exec>
			<!-- Set up variables for a session -->
				<!-- Dialogue variables -->
			stateName="Initialise";
			silenceTimeout = 0;
			n=0;
			sayAcceptGroupEntryMessage=true;
			sayStep2EntryMessage=true;
			sayStep4EntryMessage=true;
			system.setMaxUsers(20);
			entryMessage=new boolean[7];
			for(int i =0;i&lt; 7;i++){
				entryMessage[i]=true;
			}
			checkUser="";
			userBodies= new HashMap&lt;String,String&gt;();
			wasInterrupted=false;
			currentUser="";
			logger=new Logger();
			 	<!-- Recommendation system variables -->
			currentUsers = new ArrayList&lt;Integer&gt;();
			group= new ArrayList&lt;Integer&gt;();
			recommendation = new String[2];
			isMovie=true;
			genre="";
			rating="-1";
			recommendationNumber=0;	
			logger.logMessage("Entered state Initialise.");				
			</exec>
			<goto state="Idle"/>
		</onentry>
	</state>
	
	<!-- State where the system is waiting for a user to interact with. -->	
	<state id="Idle" extends="Dialog">
		<onentry>
			<agent:attendNobody/>
			<exec>stateName="Idle"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:hello">
			<exec>System.out.println("Idle state: user said hello, I should say something...");
				  logger.logMessage("User said hello");
			</exec>
			<exec>checkUser=event.getString("user")</exec>
			<agent:attend target="event:user"/>
			<exec>currentUser=event.getString("user")</exec>
			<goto state="Greeting"/>
		</onevent>
		<onevent name="sense.user.speak**" cond="(event?:sem:initalChoice or event?:sem:genre or event?:sem:number or event?:sem:recommend or event?:sem:yes or event?:sem:no)">
			<exec>System.out.println("Someone said something else");
				logger.logMessage("Someone said something else.");
			</exec>
			<agent:listen/>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone said something --? "+event.getString("text"));
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
		<!--<onevent name="sense.user.attend">
			<agent:attend target="event:user"/>
			<exec>checkUser=event.getString("user")</exec>
			<exec>currentUser=event.getString("user")</exec>
			<goto state="CheckUserLocation"/>
		</onevent>-->
		<onevent name="sense.user.enter">
			<exec>System.out.println("User is : "+event.getString("user"))</exec>
			<exec>System.out.println("Body is: "+event.getString("sensor").substring(7))</exec>
			<exec>userBodies.put(event.getString("user"),event.getString("sensor").substring(7));
				  logger.logMessage("User "+event.getString("user")+" entered. His body is "+event.getString("sensor").substring(7));
			</exec>
			<agent:listen/>
			<reentry/>	
		</onevent>
		
	</state>
	
	<!--<state id="CheckUserLocation" extends="Dialog">
		<onevent name="sense.body">
			<exec>System.out.println("Checking user location...");
				Record rec = (Record) event.get("bodies");
				distance=0.0;
				try{
					String body= userBodies.get(checkUser);
					distance = Utils.calculateDistanceBody(body,rec);
				}
				catch (Exception e){
				}
			</exec>
			<if cond="2>distance">
				<goto state="Greeting"/>
			<else/>
				<goto state="Idle"/>
			</if>
		</onevent>		
	</state>-->
	
	<!-- Greet the potential new user. -->
	<state id="Greeting" extends="Dialog">
		<onentry>
			<exec>stateName="Greeting"</exec>
			<exec>System.out.println("Entered state: "+stateName);
			 	  logger.logMessage("Entered state: "+stateName);
			 </exec>
			<agent:say>Hi there</agent:say>
			<wait msec="100"/>
			<agent:say>I see you're looking for something to watch.</agent:say>
			<goto state="Start"/>
		</onentry>	
	</state>
	
	<!-- Start the interaction by asking the user if they want to be recommended something to watch. -->
	<state id="Start" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<if cond="entryMessage[0]">
				<exec>stateName="Start"</exec>
				<exec>System.out.println("Entered state: "+stateName);
					   logger.logMessage("Entered state: "+stateName);
				</exec>
				<exec>stateId=0</exec>
				<agent:say>Would you like me to recommend you something?</agent:say>
			</if>
			<exec>entryMessage[0]=true</exec>
			<agent:listen/>		
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes"> 
			<if cond="threshold &lt; asFloat(event:conf)">
				<exec>String s=event.getString("user");
					int u =Integer.parseInt(s.substring(5));
					currentUsers.add(u); //add "main" user
				</exec>
				<exec>logger.logMessage("User said yes");</exec>
				<goto state="CheckGroups"/>
			<else/>
				<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
				<exec>logger.logUnsure();
					  logger.logMessage("User said yes - not sure enough");
				</exec>
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<if cond="threshold &lt; asFloat(event:conf)">
				<agent:say>Okay, maybe another time. Let me know if you change your mind.</agent:say>
				<exec>logger.logMessage("User said no");</exec>
				<agent:attendNobody/>
				<goto state="Goodbye"/>
			<else/>
				<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
				<exec>logger.logUnsure();
					  logger.logMessage("User said no - not sure enough");
				</exec>
				<agent:listen/>
			</if>			
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:initalChoice or event?:sem:genre or event?:sem:number or event?:sem:recommend)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Start: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					  logger.logMessage("User said something else");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<!-- if hear someone else speaking, ignore that -->
		<onevent name="sense.user.speak**">
			<exec>logger.logMessage("Someone said something - ignore and listen further");</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Check if current user is part of a group. -->
	<state id="CheckGroups" extends="Dialog">
		<onevent name="sense.body">
			<exec>System.out.println("CheckGroups: sense.body event was fired!");
				Record rec = (Record) event.get("bodies");
				String s = "body-"+currentUsers.get(0);
				//Body current = (Body) rec.get(s);
				System.out.println("current user is: "+currentUsers.get(0));
				System.out.println("current body is: "+userBodies.get("user-"+currentUsers.get(0)));
				try{
					group = Utils.calculateGroups(userBodies.get("user-"+currentUsers.get(0)),rec,userBodies);
				}
				catch (Exception e){
					group = new ArrayList&lt;&gt;();
				}
				n=group.size();
				int m=n+1;
				System.out.println("A group of size "+m+" was found. Its members are: ");
				for(int i=0;i&lt;n;i++)
					System.out.print(group.get(i));
					
				logger.logMessage("Entered state: CheckGroups.");
				logger.logMessage("A group of size "+m+" was found.");
			</exec>
			<if  cond="n>0">
				<goto state="AcceptGroup"/>
			<else/>
				<goto state="Step1_MovieOrSeries"/>
			</if>
		</onevent>
	</state>
	
	<!-- Ask the user to validate the group found (if a group was found). -->
	<state id="AcceptGroup" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateId=1;
				  logger.logMessage("Entered state: AcceptGroup");
			</exec>
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;
				</exec>
			</if>
			<if cond="entryMessage[1]">
				<if cond="n==1">
					<agent:say> It looks like you are in a group with one other person.</agent:say>
				</if>
				<if cond="n==2">
					<agent:say> It looks like you are in a group with two other people.</agent:say>
				</if>
				<if cond="n==3">
					<agent:say> It looks like you are in a group with three other people.</agent:say>
				</if>
				<if cond="n==4">
					<agent:say> It looks like you are in a group with four other people.</agent:say>
				</if>
				<if cond="n==5">
					<agent:say> It looks like you are in a group with five other people.</agent:say>
				</if>
				<agent:say> Will they be watching the same programme?</agent:say>
				
			</if>
			<exec>entryMessage[1]=true</exec>
			<!-- <exec>entryMessage[1]=false;</exec>-->
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:yes">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:say>In this case everyon can participate. Let's get started. </agent:say>
					<!-- The main user has agreed that they are in a group. 
						Add the rest of the member to the currentUsers so that they are allowed to answer question. -->
					<exec>for(int i=0;i&lt;n;i++){
							currentUsers.add(group.get(i));}
					</exec>
					<exec>logger.logMessage("User said yes.");</exec>
					<goto state="Step1_MovieOrSeries"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
				      	  logger.logMessage("User said yes - not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else />
				<agent:attend target="event:user"/>
				<agent:say>I wasn't talking to you.</agent:say>
				<exec>wasInterrupted=true;</exec>
				<agent:attend target="currentUser"/>
				<exec>logger.logMessage("Someone interrupted (yes).");</exec>
				<reentry/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**" cond="event?:sem:no">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:say>I see. Let's start with you then.</agent:say>
					<exec>logger.logMessage("User said no.")</exec>
					<goto state="Step1_MovieOrSeries"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said no - not sure enough.")
					</exec>
					<agent:listen/>
				</if>
			<else />
				<agent:attend target="event:user"/>
				<agent:say>I wasn't talking to you.</agent:say>
				<exec>wasInterrupted=true</exec>
				<agent:attend target="currentUser"/>
				<exec>logger.logMessage("Someone interrupted (no).");</exec>
				<reentry/>
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:initalChoice or event?:sem:genre or event?:sem:number or event?:sem:recommend)">
			<if cond="event?:attsys:true">
				<exec>System.out.println("Start: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					  logger.logMessage("User said something else");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further")</exec>
			<exec>logger.logMessage("Someone said something - ignore and listen further");</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Initial choice: movie vs tv series. -->
	<state id="Step1_MovieOrSeries" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="Step1_MovieOrSeries" </exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<exec>stateId=2</exec>
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;</exec>
			</if>
			<if cond="entryMessage[2]">
				<agent:say>Would you like to watch a movie or a tv series?</agent:say>
			<!--<send event="action.gaze" p:location="'middle'" p:mode="'headpose'" p:agent="'system'"/>-->
			</if>
			<exec>entryMessage[2]=true</exec>
			<agent:listen/>		
		</onentry>		
		<onevent name="sense.user.speak**" cond="event?:sem:initialChoice">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">	
					<agent:attend target="event:user"/>
					<exec>isMovie=event.getString("text").equals("movie");
						  logger.logMessage("User chose "+ event.getString("text"));
					</exec>
					<exec>currentUser=event.getString("user")</exec>
					<exec>String choiceMsg = SpecificMessage.movieSeriesSpecificMessage(event.getString("sem"))</exec>
					<send event="action.gesture" p:name="'smile'"/>
					<send event="action.speech" p:text="choiceMsg"/>
					<wait msec="1000"/>
					<goto state="Step2_Genre"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						logger.logMessage("Not sure enough.Repeat.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					logger.logMessage("Someone interrupted");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:yes or event?:sem:no or event?:sem:genre or event?:sem:number)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Step1: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					logger.logMessage("User said something else.");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Second choice: genre. -->
	<state id="Step2_Genre" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="Step2_Genre"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<exec>stateId=3</exec>
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;</exec>
			</if>
			<if cond="entryMessage[3]">
				<if cond="sayStep2EntryMessage">
					<agent:say>Great!</agent:say>	
				</if>
				<agent:say>What genre should it be?</agent:say>	
				<exec>sayStep2EntryMessage=false</exec>
			</if>
			<exec>entryMessage[3]=true</exec>
			<agent:listen/>	
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:genre">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>genre=event.getString("text");
						 logger.logMessage("User chose "+genre);
					</exec>
					<exec>currentUser=event.getString("user")</exec>
					<exec>String genreMsg = SpecificMessage.genreSpecificMessage(genre)</exec>
					<send event="action.gesture" p:name="'smile'"/>
					<send event="action.speech" p:text="genreMsg"/>
					<wait msec="1000"/>
					<goto state="Step3_1_Rating"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
					   logger.logMessage("Not sure enough");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					 	logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak**" cond="event?:sem:recommend or event?:sem:idontknow">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>currentUser=event.getString("user");
						logger.logMessage("User said recommend/idk.");
					</exec>
					<goto state="RecommendGenre"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said recommend/idk -not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					logger.logMessage("Someone interupted");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:yes or event?:sem:no or event?:sem:number or event?:sem:initialChoice)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Step2: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					logger.logMessage("Someone said something else.");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Ask the user if they want to add a min rating. -->
	<state id="Step3_1_Rating" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="Step3_1_Rating"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<exec>stateId=4</exec>
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;</exec>
			</if>
			<if cond="entryMessage[4]">
				<agent:say>Finally, do you want to add a minimum rating? This is an average of audience votes.</agent:say>
			</if>
			<exec>entryMessage[4]=true</exec>
			<agent:listen/>		
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:yes"> 
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>currentUser=event.getString("user")</exec>
					<exec>logger.logMessage("User said yes.");</exec>
					<goto state="Step3_2_Rating"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said yes -not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak**" cond="event?:sem:no">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>currentUser=event.getString("user");
						logger.logMessage("User said no.");
					</exec>
					<agent:say>All set! Let me think of a good recommendation for you...</agent:say>
					<goto state="Step4_Recommend"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said no -not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					  logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if> 
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:genre or event?:sem:initialChoice or event?:sem:number or event?:sem:recommend)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Step3_1: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					  logger.logMessage("Someone said something.");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Add rating if answer to prev question was yes. -->
	<state id="Step3_2_Rating" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="Step3_2_Rating"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<exec>stateId=5</exec>
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;</exec>
			</if>
			<if cond="entryMessage[5]">
				<agent:say>Ok, then, please say a number between 1 and 10!</agent:say>
			</if>
			<exec>entryMessage[5]=true</exec>
			<agent:listen/>		
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:number"> 
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>rating=event.getString("text");
						 logger.logMessage("User said "+ rating);
					</exec>
					<exec>currentUser=event.getString("user")</exec>
					<agent:say>All set! Let me think of a good recommendation for you...</agent:say>
					<goto state="Step4_Recommend"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said "+ rating+" -not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					  logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:yes or event?:sem:no or event?:sem:genre or event?:sem:initialChoice or event?:sem:recommend)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Step3_2: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					logger.logMessage("User said something else.");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Give a recommendation, then ask the user if they would like another recommendation. -->
	<state id="Step4_Recommend" extends="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="Step4_Recommend"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<exec>stateId=6</exec>	
			<if cond="wasInterrupted">
				<agent:say> Sorry. Where were we? Ah yes...</agent:say>
				<exec>wasInterrupted=false;</exec>
				<exec>entryMessage[6]=false;</exec>
				<agent:say>In case you don't like it I can give you another recommendation. Would you like me to do that?</agent:say>
				<agent:listen/>
			</if>
			<if cond="entryMessage[6]">
				<exec>recommendation= Recommender.recommend(isMovie, genre, rating, recommendationNumber)</exec>
				<if cond="!recommendation[0].equals('error')">
					<exec>String message1="Ok. I think I've got it. I recommend you to watch the following: "+recommendation[0]</exec>
					<exec>String message2="A short overview of it is as folows: "+recommendation[1]</exec>
					<send event="action.speech" p:text="message1"/>
					<send event="action.speech" p:text="message2"/>
					<!--  <exec>Utils.waitMethod(2)</exec>
					<exec>Thread.sleep(2000);</exec>-->
					<agent:say>That was the end of the overview.</agent:say>
					<!-- <wait msec="4000"/> -->
					<agent:say>In case you don't like it I can give you another recommendation. Would you like me to do that?</agent:say>
				<else/>
					<agent:say>I apologise, I can't seem to find you a good recommendation. Maybe you could try later.</agent:say>
					<goto state="Goodbye"/>
				</if>
			</if>
			<exec>entryMessage[6]=true</exec>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:yes">
		 	<if cond="Utils.canUserAnswer(event,currentUsers)">
		 		<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>recommendationNumber++;
						  logger.logMessage("User said yes.");
					</exec>
					<exec>currentUser=event.getString("user")</exec>
					<goto state="Step4_Recommend"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said yes -not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					  logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if> 
		</onevent>
		<onevent name="sense.user.speak**" cond="event?:sem:no">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<agent:say>All right. Hope you'll enjoy your show</agent:say>
					<exec>currentUser=event.getString("user")</exec>
					<exec>logger.logMessage("User said no.");</exec>
					<goto state="Goodbye"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said no - not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>wasInterrupted=true;
					 logger.logMessage("Someone interrupted.");
				</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if> 
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:genre or event?:sem:initialChoice or event?:sem:number or event?:sem:recommend)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Start: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					  logger.logMessage("User said something else.");
				</exec>
				<agent:listen/>
			<else/>
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>
	</state>
	
	<!-- Say goodbye. -->
	<state id="Goodbye">
		<onentry>
			<exec>stateName="Goodbye"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<agent:say>It was nice meeting you! Goodbye</agent:say>
			<exec>logger.writeSessionLog();</exec>
			<goto state="Initialise"/>
		</onentry>
	</state>
	
	<!-- Recommend a randon genre if a user can't decide. *This state comes after "Step2_Genre"; however it may not be used* -->
	<state id="RecommendGenre">
		<param name="threshold" type="Float" default="0.7"/>
		<onentry>
			<exec>stateName="RecommendGenre"</exec>
			<exec>System.out.println("Entered state: "+stateName);
				  logger.logMessage("Entered state: "+stateName);
			</exec>
			<agent:say> Should I choose a random genre for you?</agent:say>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak**" cond="event?:sem:yes">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>genre=Recommender.randomGenre();</exec>
					<exec>currentUser=event.getString("user");
						  logger.logMessage("User said yes.");
					</exec>
					<agent:say>ok, I'll make it a surprise</agent:say>
					<goto state="Step3_1_Rating"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said yes - not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<agent:attend target="currentUser"/>
				<exec>logger.logMessage("Someone interrupted.");</exec>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak**" cond="event?:sem:no">
			<if cond="Utils.canUserAnswer(event,currentUsers)">
				<if cond="threshold &lt; asFloat(event:conf)">
					<agent:attend target="event:user"/>
					<exec>currentUser=event.getString("user");
						  logger.logMessage("User said no.");
					</exec>
					<goto state="Step2_Genre"/>
				<else/>
					<agent:say>I'm not sure enough i got that right. Please repeat.</agent:say>
					<exec>logger.logUnsure();
						  logger.logMessage("User said no - not sure enough.");
					</exec>
					<agent:listen/>
				</if>
			<else/> 
				<agent:attend target="event:user"/>
				<agent:say>I'm busy now, please wait.</agent:say>
				<exec>logger.logMessage("Someone interrupted.");</exec>
				<agent:attend target="currentUser"/>
				<reentry/>	<!-- Should go back and ask again -->
			</if>
		</onevent>
		<onevent name="sense.user.speak" cond="(event?:sem:number or event?:sem:initialChoice or event?:sem:recommend or event?:sem:idontknow)"> 
			<if cond="event?:attsys:true">
				<exec>System.out.println("Step2: user said something else")</exec>
				<agent:say>Sorry, I didn't get that</agent:say>
				<exec>logger.log();
					   logger.logMessage("User said something else.");
				</exec>
				<agent:listen/>
			<else/> 
				<agent:listen/>
			</if>
		</onevent>
		<onevent name="sense.user.speak**">
			<exec>System.out.println("Someone is talking; ignore and listen further");
				  logger.logMessage("Someone said something - ignore and listen further");
			</exec>
			<agent:listen/>
		</onevent>	
	</state>
	
	<!-- State that all other states extend. Add general functionality. -->
	<state id="Dialog">
		<param name="threshold" type="Float" default="0.7"/>
		<onevent name="sense.user.speech.start" cond="system.isAttending(event) and eq(event:speakers, 1)">
			 <send event="action.gesture" p:name="'smile'"/>
		</onevent>
		<!-- <onevent name="sense.user.speak" cond="event?:attsys:true">
			<exec>System.out.println("Did not understand +user was looking at me")</exec>
			<agent:say>Sorry, I didn't get that.</agent:say>
			<exec>entryMessage[stateId]=true</exec>
			<reentry/>
		</onevent> -->
		<onevent name="sense.user.speak" cond="event?:attsys:false">
			<exec>System.out.println("Did not understand +user was not looking at me")</exec>
			<exec>entryMessage[stateId]=false</exec>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:idontknow">
			<exec>logger.logMessage("User said idk.");</exec>
			<agent:say>Choose something</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak.multi">
			<agent:say>Don't speak at the same time.</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.silence">
			<if cond="silenceTimeout&lt;2"> <!-- if a user is silent for more than 3 times, go to state Goodbye -->
				<agent:say>Sorry, I didn't hear anything.</agent:say>
				<exec> silenceTimeout++;
					   logger.logMessage("User silence.");
				</exec>
				<reentry/>
			<else /> <goto state="Goodbye"/>
			</if>
		</onevent>
		<onevent name="sense.user.leave">
			<exec>logger.logMessage("A user was sensed leaving.");</exec>
			<exec>String s=event.getString("user");
				boolean wasCurrent=false;
				  int u= Integer.parseInt(s.substring(5));
				  if(currentUsers.contains(u)){ //if user was being attended to by the system, delete him
				  	currentUsers.remove(Integer.valueOf(u)); //delete the user that left 
				  	System.out.println("someone left,the list of users is: "+currentUsers);
				  	wasCurrent=true;}
			</exec>
			<if cond="stateName.equals('Start') or stateName.equals('Greeting')" >
				<exec>System.out.println("User left in state Start/Greeting");
					  logger.logMessage("User left in state Start/Greeting");
				</exec>
				<goto state="Initialise"/>
			</if>
			<!-- if the user was being currently addented by, check if there are more users to interact with -->
			<if cond="wasCurrent">
				<if cond="currentUsers.size()>0">
					<exec>String s2= "user-"+currentUsers.get(0);
						logger.logMessage("Attend someone else.");
					</exec>
					<agent:attend target="s"/>
				<else />
					<goto state="Initialise"/>
				</if>
			</if>
		</onevent>
		<onevent name="sense.user.enter">
			<exec>userBodies.put(event.getString("user"),event.getString("sensor").substring(7));</exec>
			<exec>System.out.println("Adding a user that just entered "+stateName);
				  logger.logMessage("Adding user "+event.getString("user")+ " with body "+event.getString("sensor").substring(7)+" to the map.");
			</exec>	
			<reentry/>
		</onevent>
		<onevent name="repeat">
			<reentry/>
		</onevent>
	</state>
	
</flow>